# src/keyboards.py
from telegram import InlineKeyboardMarkup, InlineKeyboardButton

def get_main_menu_keyboard():
    keyboard = [
        [InlineKeyboardButton("üí∞ –ú–æ–∏ –¥–æ–ª–≥–∏ (–Ø –¥–æ–ª–∂–µ–Ω)", callback_data="main_my_debts")],
        [InlineKeyboardButton("üí∏ –ú–Ω–µ –¥–æ–ª–∂–Ω—ã", callback_data="main_their_debts")],
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å", callback_data="main_add_record")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_add_type_keyboard():
    keyboard = [
        [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –¥–æ–ª–≥", callback_data="add_type_debt")],
        [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –¥–æ–ª–≥ –º–Ω–µ", callback_data="add_type_receivable")],
        [InlineKeyboardButton("‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_confirmation_keyboard(flow):
    keyboard = [[
        InlineKeyboardButton("‚úÖ –î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ", callback_data=f"confirm_yes_{flow}"),
        InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data="main_menu")
    ]]
    return InlineKeyboardMarkup(keyboard)

def get_list_keyboard(flow, items):
    keyboard = []
    prefix = "creditor" if flow == "debt" else "debtor"
    for item in items:
        keyboard.append([InlineKeyboardButton(item, callback_data=f"{prefix}|{item}")])
    keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
    return InlineKeyboardMarkup(keyboard)

def get_records_keyboard(flow, name, records):
    keyboard = []
    prefix = "view_debt" if flow == "debt" else "view_receivable"
    for amount, due_date, created_at in records:
        button_text = f"{amount} —Ä—É–±. –¥–æ {due_date}"
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–µ–ª –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∏–º–≤–æ–ª '|'
        safe_created_at = created_at.replace(" ", "|")
        keyboard.append([InlineKeyboardButton(button_text, callback_data=f"{prefix}|{name}|{safe_created_at}")])
    
    back_callback = "main_my_debts" if flow == "debt" else "main_their_debts"
    keyboard.append([InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=back_callback)])
    return InlineKeyboardMarkup(keyboard)

def get_debt_management_keyboard(creditor, created_at):
    safe_created_at = created_at.replace(" ", "|")
    keyboard = [
        [InlineKeyboardButton("üí∞ –ü–æ–≥–∞—Å–∏—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ", callback_data=f"repay|debt|{creditor}|{safe_created_at}")],
        [InlineKeyboardButton("‚úÖ –ü–æ–≥–∞—Å–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é", callback_data=f"close|debt|{creditor}|{safe_created_at}")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –¥–æ–ª–≥–∞–º", callback_data=f"creditor|{creditor}")]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_receivable_management_keyboard(debtor, created_at):
    safe_created_at = created_at.replace(" ", "|")
    keyboard = [
        [InlineKeyboardButton("üí∞ –ü–æ–ª—É—á–µ–Ω–∞ —á–∞—Å—Ç—å", callback_data=f"repay|receivable|{debtor}|{safe_created_at}")],
        [InlineKeyboardButton("‚úÖ –î–æ–ª–≥ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é", callback_data=f"close|receivable|{debtor}|{safe_created_at}")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –¥–æ–ª–≥–∞–º —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞", callback_data=f"debtor|{debtor}")]
    ]
    return InlineKeyboardMarkup(keyboard)